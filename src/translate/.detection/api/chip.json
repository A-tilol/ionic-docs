{
  "filePath": "./src/components/chip/chip.tsx",
  "encapsulation": "shadow",
  "tag": "ion-chip",
  "readme": "# ion-chip\n\nChips represent complex entities in small blocks, such as a contact. A chip can contain several different elements such as avatars, text, and icons.\n",
  "docs": "Chips represent complex entities in small blocks, such as a contact. A chip can contain several different elements such as avatars, text, and icons.",
  "docsTags": [
    {
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use.",
      "name": "virtualProp"
    }
  ],
  "usage": {
    "angular": "```html\n<ion-chip>\n  <ion-label>Default</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-label color=\"secondary\">Secondary Label</ion-label>\n</ion-chip>\n\n<ion-chip color=\"secondary\">\n  <ion-label color=\"dark\">Secondary w/ Dark label</ion-label>\n</ion-chip>\n\n<ion-chip [disabled]=\"true\">\n  <ion-label>Disabled Chip</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-icon name=\"pin\"></ion-icon>\n  <ion-label>Default</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-icon name=\"heart\" color=\"dark\"></ion-icon>\n  <ion-label>Default</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-label>Button Chip</ion-label>\n  <ion-icon name=\"close-circle\"></ion-icon>\n</ion-chip>\n\n<ion-chip>\n  <ion-icon name=\"pin\" color=\"primary\"></ion-icon>\n  <ion-label>Icon Chip</ion-label>\n  <ion-icon name=\"close\"></ion-icon>\n</ion-chip>\n\n<ion-chip>\n  <ion-avatar>\n    <img src=\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\">\n  </ion-avatar>\n  <ion-label>Avatar Chip</ion-label>\n  <ion-icon name=\"close-circle\"></ion-icon>\n</ion-chip>\n```\n",
    "javascript": "```html\n<ion-chip>\n  <ion-label>Default</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-label color=\"secondary\">Secondary Label</ion-label>\n</ion-chip>\n\n<ion-chip color=\"secondary\">\n  <ion-label color=\"dark\">Secondary w/ Dark label</ion-label>\n</ion-chip>\n\n<ion-chip disabled=\"true\">\n  <ion-label>Disabled Chip</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-icon name=\"pin\"></ion-icon>\n  <ion-label>Default</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-icon name=\"heart\" color=\"dark\"></ion-icon>\n  <ion-label>Default</ion-label>\n</ion-chip>\n\n<ion-chip>\n  <ion-label>Button Chip</ion-label>\n  <ion-icon name=\"close-circle\"></ion-icon>\n</ion-chip>\n\n<ion-chip>\n  <ion-icon name=\"pin\" color=\"primary\"></ion-icon>\n  <ion-label>Icon Chip</ion-label>\n  <ion-icon name=\"close\"></ion-icon>\n</ion-chip>\n\n<ion-chip>\n  <ion-avatar>\n    <img src=\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\">\n  </ion-avatar>\n  <ion-label>Avatar Chip</ion-label>\n  <ion-icon name=\"close-circle\"></ion-icon>\n</ion-chip>\n```\n",
    "react": "```tsx\nimport React from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonChip, IonLabel, IonIcon, IonAvatar } from '@ionic/react';\nimport { pin, heart, closeCircle, close } from 'ionicons/icons';\n\nexport const ChipExamples: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>ChipExamples</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonChip>\n          <IonLabel>Default</IonLabel>\n        </IonChip>\n\n        <IonChip>\n          <IonLabel color=\"secondary\">Secondary Label</IonLabel>\n        </IonChip>\n\n        <IonChip color=\"secondary\">\n          <IonLabel color=\"dark\">Secondary w/ Dark label</IonLabel>\n        </IonChip>\n\n        <IonChip disabled={true}>\n          <IonLabel>Disabled Chip</IonLabel>\n        </IonChip>\n\n        <IonChip>\n          <IonIcon icon={pin} />\n          <IonLabel>Default</IonLabel>\n        </IonChip>\n\n        <IonChip>\n          <IonIcon icon={heart} color=\"dark\" />\n          <IonLabel>Default</IonLabel>\n        </IonChip>\n\n        <IonChip>\n          <IonLabel>Button Chip</IonLabel>\n          <IonIcon icon={closeCircle} />\n        </IonChip>\n\n        <IonChip>\n          <IonIcon icon={pin} color=\"primary\" />\n          <IonLabel>Icon Chip</IonLabel>\n          <IonIcon icon={close} />\n        </IonChip>\n\n        <IonChip>\n          <IonAvatar>\n            <img src=\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\" />\n          </IonAvatar>\n          <IonLabel>Avatar Chip</IonLabel>\n          <IonIcon icon={closeCircle} />\n        </IonChip>\n      </IonContent>\n    </IonPage>\n  );\n};\n\n```\n",
    "stencil": "```tsx\nimport { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'chip-example',\n  styleUrl: 'chip-example.css'\n})\nexport class ChipExample {\n  render() {\n    return [\n      <ion-chip>\n        <ion-label>Default</ion-label>\n      </ion-chip>,\n\n      <ion-chip>\n        <ion-label color=\"secondary\">Secondary Label</ion-label>\n      </ion-chip>,\n\n      <ion-chip color=\"secondary\">\n        <ion-label color=\"dark\">Secondary w/ Dark label</ion-label>\n      </ion-chip>,\n\n      <ion-chip>\n        <ion-icon name=\"pin\"></ion-icon>\n        <ion-label>Default</ion-label>\n      </ion-chip>,\n\n      <ion-chip>\n        <ion-icon name=\"heart\" color=\"dark\"></ion-icon>\n        <ion-label>Default</ion-label>\n      </ion-chip>,\n\n      <ion-chip>\n        <ion-label>Button Chip</ion-label>\n        <ion-icon name=\"close-circle\"></ion-icon>\n      </ion-chip>,\n\n      <ion-chip>\n        <ion-icon name=\"pin\" color=\"primary\"></ion-icon>\n        <ion-label>Icon Chip</ion-label>\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-chip>,\n\n      <ion-chip>\n        <ion-avatar>\n          <img src=\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\"/>\n        </ion-avatar>\n        <ion-label>Avatar Chip</ion-label>\n        <ion-icon name=\"close-circle\"></ion-icon>\n      </ion-chip>\n    ];\n  }\n}\n```",
    "vue": "```html\n<template>\n  <ion-chip>\n    <ion-label>Default</ion-label>\n  </ion-chip>\n\n  <ion-chip>\n    <ion-label color=\"secondary\">Secondary Label</ion-label>\n  </ion-chip>\n\n  <ion-chip color=\"secondary\">\n    <ion-label color=\"dark\">Secondary w/ Dark label</ion-label>\n  </ion-chip>\n\n  <ion-chip :disabled=\"true\">\n    <ion-label>Disabled Chip</ion-label>\n  </ion-chip>\n\n  <ion-chip>\n    <ion-icon :icon=\"pin\"></ion-icon>\n    <ion-label>Default</ion-label>\n  </ion-chip>\n\n  <ion-chip>\n    <ion-icon :icon=\"heart\" color=\"dark\"></ion-icon>\n    <ion-label>Default</ion-label>\n  </ion-chip>\n\n  <ion-chip>\n    <ion-label>Button Chip</ion-label>\n    <ion-icon :icon=\"closeCircle\"></ion-icon>\n  </ion-chip>\n\n  <ion-chip>\n    <ion-icon :icon=\"pin\" color=\"primary\"></ion-icon>\n    <ion-label>Icon Chip</ion-label>\n    <ion-icon :icon=\"close\"></ion-icon>\n  </ion-chip>\n\n  <ion-chip>\n    <ion-avatar>\n      <img src=\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\">\n    </ion-avatar>\n    <ion-label>Avatar Chip</ion-label>\n    <ion-icon :icon=\"closeCircle\"></ion-icon>\n  </ion-chip>\n</template>\n\n<script>\nimport { IonAvatar, IonChip, IonIcon, IonLabel } from '@ionic/vue';\nimport { close, closeCircle, heart, pin } from 'ionicons/icons';\n\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  components: { IonAvatar, IonChip, IonIcon, IonLabel },\n  setup() {\n    return { close, closeCircle, heart, pin }\n  }\n});\n</script>\n```\n"
  },
  "props": [
    {
      "name": "color",
      "type": "string | undefined",
      "mutable": false,
      "attr": "color",
      "reflectToAttr": false,
      "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "disabled",
      "type": "boolean",
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "If `true`, the user cannot interact with the chip.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "outline",
      "type": "boolean",
      "mutable": false,
      "attr": "outline",
      "reflectToAttr": false,
      "docs": "Display an outline style button.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [],
  "styles": [
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the chip"
    },
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Color of the chip"
    }
  ],
  "slots": [],
  "parts": [],
  "dependents": [],
  "dependencies": [
    "ion-ripple-effect"
  ],
  "dependencyGraph": {
    "ion-chip": [
      "ion-ripple-effect"
    ]
  }
}